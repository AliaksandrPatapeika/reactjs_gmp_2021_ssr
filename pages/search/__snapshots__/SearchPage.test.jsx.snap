// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchPage renders correctly 1`] = `
Array [
  <div
    className="loadingSpinner"
    dangerouslySetInnerHTML={
      Object {
        "__html": "<svg xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 32 32\\">
  <circle cx=\\"16\\" cy=\\"3\\" r=\\"0\\">
    <animate attributeName=\\"r\\" values=\\"0;3;0;0\\" dur=\\"1s\\" repeatCount=\\"indefinite\\" begin=\\"0\\" keySplines=\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\" calcMode=\\"spline\\" />
  </circle>
  <circle transform=\\"rotate(45 16 16)\\" cx=\\"16\\" cy=\\"3\\" r=\\"0\\">
    <animate attributeName=\\"r\\" values=\\"0;3;0;0\\" dur=\\"1s\\" repeatCount=\\"indefinite\\" begin=\\"0.125s\\" keySplines=\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\" calcMode=\\"spline\\" />
  </circle>
  <circle transform=\\"rotate(90 16 16)\\" cx=\\"16\\" cy=\\"3\\" r=\\"0\\">
    <animate attributeName=\\"r\\" values=\\"0;3;0;0\\" dur=\\"1s\\" repeatCount=\\"indefinite\\" begin=\\"0.25s\\" keySplines=\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\" calcMode=\\"spline\\" />
  </circle>
  <circle transform=\\"rotate(135 16 16)\\" cx=\\"16\\" cy=\\"3\\" r=\\"0\\">
    <animate attributeName=\\"r\\" values=\\"0;3;0;0\\" dur=\\"1s\\" repeatCount=\\"indefinite\\" begin=\\"0.375s\\" keySplines=\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\" calcMode=\\"spline\\" />
  </circle>
  <circle transform=\\"rotate(180 16 16)\\" cx=\\"16\\" cy=\\"3\\" r=\\"0\\">
    <animate attributeName=\\"r\\" values=\\"0;3;0;0\\" dur=\\"1s\\" repeatCount=\\"indefinite\\" begin=\\"0.5s\\" keySplines=\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\" calcMode=\\"spline\\" />
  </circle>
  <circle transform=\\"rotate(225 16 16)\\" cx=\\"16\\" cy=\\"3\\" r=\\"0\\">
    <animate attributeName=\\"r\\" values=\\"0;3;0;0\\" dur=\\"1s\\" repeatCount=\\"indefinite\\" begin=\\"0.625s\\" keySplines=\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\" calcMode=\\"spline\\" />
  </circle>
  <circle transform=\\"rotate(270 16 16)\\" cx=\\"16\\" cy=\\"3\\" r=\\"0\\">
    <animate attributeName=\\"r\\" values=\\"0;3;0;0\\" dur=\\"1s\\" repeatCount=\\"indefinite\\" begin=\\"0.75s\\" keySplines=\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\" calcMode=\\"spline\\" />
  </circle>
  <circle transform=\\"rotate(315 16 16)\\" cx=\\"16\\" cy=\\"3\\" r=\\"0\\">
    <animate attributeName=\\"r\\" values=\\"0;3;0;0\\" dur=\\"1s\\" repeatCount=\\"indefinite\\" begin=\\"0.875s\\" keySplines=\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\" calcMode=\\"spline\\" />
  </circle>
  <circle transform=\\"rotate(180 16 16)\\" cx=\\"16\\" cy=\\"3\\" r=\\"0\\">
    <animate attributeName=\\"r\\" values=\\"0;3;0;0\\" dur=\\"1s\\" repeatCount=\\"indefinite\\" begin=\\"0.5s\\" keySplines=\\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\\" calcMode=\\"spline\\" />
  </circle>
</svg>
",
      }
    }
    style={
      Object {
        "fill": "#f65261",
        "height": 64,
        "width": 64,
      }
    }
  />,
  <div
    className="modalWindowContainer"
  >
    <div
      className="blur"
    >
      <div
        className="logoContainer"
      >
        <span
          className="netflix"
        >
          netflix
        </span>
        <span
          className="roulette"
        >
          roulette
        </span>
      </div>
      <div
        className="modalWindow"
      >
        <button
          className="closeButton"
          disabled={false}
          id={null}
          onClick={[Function]}
          type="button"
        >
          
          <i
            aria-hidden="true"
            className="fa fa-times"
          />
        </button>
        <div
          className="modalBody"
        >
          <span
            className="title"
          >
            ADD MOVIE
          </span>
          <form
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="formItem"
            >
              <label
                className="label required-label"
                htmlFor="title"
              >
                TITLE
              </label>
              <input
                autoComplete="off"
                className="input"
                id="title"
                name="title"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Title here"
                required={true}
                type="text"
                value=""
              />
            </div>
            <div
              className="formItem"
            >
              <label
                className="label required-label"
                htmlFor="release_date"
              >
                RELEASE DATE
              </label>
              <input
                autoComplete="off"
                className="input"
                id="release_date"
                name="release_date"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Select Date"
                required={true}
                type="date"
                value=""
              />
            </div>
            <div
              className="formItem"
            >
              <label
                className="label"
                htmlFor="poster_path"
              >
                MOVIE URL
              </label>
              <input
                autoComplete="off"
                className="input"
                id="poster_path"
                name="poster_path"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Movie URL here"
                required={false}
                type="text"
                value=""
              />
            </div>
            <div
              className="formItem"
            >
              <label
                className="label required-label"
                htmlFor="genres"
              >
                GENRE
              </label>
              <div
                className="requiredSelectContainer"
              >
                <div
                  className="select css-2b097c-container"
                  id="genres"
                  onKeyDown={[Function]}
                >
                  <span
                    aria-atomic="false"
                    aria-live="polite"
                    aria-relevant="additions text"
                    className="css-1f43avz-a11yText-A11yText"
                  />
                  <div
                    className="select__control css-yk16xz-control"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <div
                      className="select__value-container select__value-container--is-multi css-g1d714-ValueContainer"
                    >
                      <div
                        className="select__placeholder css-1wa3eu0-placeholder"
                      >
                        Select Genre
                      </div>
                      <div
                        className="css-b8ldur-Input"
                      >
                        <div
                          className="select__input"
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <input
                            aria-autocomplete="list"
                            autoCapitalize="none"
                            autoComplete="off"
                            autoCorrect="off"
                            disabled={false}
                            form={
                              Object {
                                "dirty": false,
                                "errors": Object {},
                                "getFieldHelpers": [Function],
                                "getFieldMeta": [Function],
                                "getFieldProps": [Function],
                                "handleBlur": [Function],
                                "handleChange": [Function],
                                "handleReset": [Function],
                                "handleSubmit": [Function],
                                "initialErrors": Object {},
                                "initialStatus": undefined,
                                "initialTouched": Object {},
                                "initialValues": Object {
                                  "budget": 0,
                                  "genres": Array [],
                                  "overview": "",
                                  "poster_path": "",
                                  "release_date": "",
                                  "revenue": 0,
                                  "runtime": 0,
                                  "tagline": "",
                                  "title": "",
                                  "vote_average": 0,
                                  "vote_count": 0,
                                },
                                "isSubmitting": false,
                                "isValid": true,
                                "isValidating": false,
                                "registerField": [Function],
                                "resetForm": [Function],
                                "setErrors": [Function],
                                "setFieldError": [Function],
                                "setFieldTouched": [Function],
                                "setFieldValue": [Function],
                                "setFormikState": [Function],
                                "setStatus": [Function],
                                "setSubmitting": [Function],
                                "setTouched": [Function],
                                "setValues": [Function],
                                "status": undefined,
                                "submitCount": 0,
                                "submitForm": [Function],
                                "touched": Object {},
                                "unregisterField": [Function],
                                "validateField": [Function],
                                "validateForm": [Function],
                                "validateOnBlur": true,
                                "validateOnChange": true,
                                "validateOnMount": false,
                                "values": Object {
                                  "budget": 0,
                                  "genres": Array [],
                                  "overview": "",
                                  "poster_path": "",
                                  "release_date": "",
                                  "revenue": 0,
                                  "runtime": 0,
                                  "tagline": "",
                                  "title": "",
                                  "vote_average": 0,
                                  "vote_count": 0,
                                },
                              }
                            }
                            id="react-select-2-input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            spellCheck="false"
                            style={
                              Object {
                                "background": 0,
                                "border": 0,
                                "boxSizing": "content-box",
                                "color": "inherit",
                                "fontSize": "inherit",
                                "label": "input",
                                "opacity": 1,
                                "outline": 0,
                                "padding": 0,
                                "width": "1px",
                              }
                            }
                            tabIndex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          >
                            
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      className="select__indicators css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        className="select__indicator-separator css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        className="select__indicator select__dropdown-indicator css-tlfecz-indicatorContainer"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <i
                          aria-hidden="true"
                          className="fa fa-caret-down"
                        />
                      </div>
                    </div>
                  </div>
                </div>
                <input
                  autoComplete="off"
                  onChange={[Function]}
                  required={true}
                  style={
                    Object {
                      "height": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "width": "100%",
                    }
                  }
                  tabIndex={-1}
                  value={Array []}
                />
              </div>
            </div>
            <div
              className="formItem"
            >
              <label
                className="label required-label"
                htmlFor="overview"
              >
                OVERVIEW
              </label>
              <input
                autoComplete="off"
                className="input"
                id="overview"
                name="overview"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Overview here"
                required={true}
                type="text"
                value=""
              />
            </div>
            <div
              className="formItem"
            >
              <label
                className="label required-label"
                htmlFor="runtime"
              >
                RUNTIME
              </label>
              <input
                autoComplete="off"
                className="input"
                id="runtime"
                name="runtime"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Runtime here"
                required={true}
                type="text"
                value={0}
              />
            </div>
            <div
              className="formItem"
            >
              <label
                className="label"
                htmlFor="budget"
              >
                BUDGET
              </label>
              <input
                autoComplete="off"
                className="input"
                id="budget"
                name="budget"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Budget here"
                required={false}
                type="text"
                value={0}
              />
            </div>
            <div
              className="formItem"
            >
              <label
                className="label"
                htmlFor="revenue"
              >
                REVENUE
              </label>
              <input
                autoComplete="off"
                className="input"
                id="revenue"
                name="revenue"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Revenue here"
                required={false}
                type="text"
                value={0}
              />
            </div>
            <div
              className="formItem"
            >
              <label
                className="label required-label"
                htmlFor="tagline"
              >
                TAGLINE
              </label>
              <input
                autoComplete="off"
                className="input"
                id="tagline"
                name="tagline"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Tagline here"
                required={true}
                type="text"
                value=""
              />
            </div>
            <div
              className="formItem"
            >
              <label
                className="label"
                htmlFor="vote_average"
              >
                VOTE AVERAGE
              </label>
              <input
                autoComplete="off"
                className="input"
                id="vote_average"
                name="vote_average"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Vote average here"
                required={false}
                type="text"
                value={0}
              />
            </div>
            <div
              className="formItem"
            >
              <label
                className="label"
                htmlFor="vote_count"
              >
                VOTE COUNT
              </label>
              <input
                autoComplete="off"
                className="input"
                id="vote_count"
                name="vote_count"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Vote count here"
                required={false}
                type="text"
                value={0}
              />
            </div>
            <div
              className="modalFooter"
            >
              <button
                className="button"
                disabled={false}
                id={null}
                onClick={[Function]}
                type="reset"
              >
                RESET
                
              </button>
              <button
                className="button"
                disabled={false}
                id={null}
                onClick={[Function]}
                type="submit"
              >
                SUBMIT
                
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>,
  <footer
    className="footerContainer"
  >
    <div
      className="logoContainer"
    >
      <span
        className="netflix"
      >
        netflix
      </span>
      <span
        className="roulette"
      >
        roulette
      </span>
    </div>
  </footer>,
]
`;
